// Generated by view binder compiler. Do not edit!
package com.example.e_commerceapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.RatingBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.e_commerceapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemProductBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final Button btnAddToCart;

  @NonNull
  public final ImageView ivProduct;

  @NonNull
  public final RatingBar ratingBar;

  @NonNull
  public final TextView tvName;

  @NonNull
  public final TextView tvOriginalPrice;

  @NonNull
  public final TextView tvPrice;

  @NonNull
  public final TextView tvRatingCount;

  private ItemProductBinding(@NonNull CardView rootView, @NonNull Button btnAddToCart,
      @NonNull ImageView ivProduct, @NonNull RatingBar ratingBar, @NonNull TextView tvName,
      @NonNull TextView tvOriginalPrice, @NonNull TextView tvPrice,
      @NonNull TextView tvRatingCount) {
    this.rootView = rootView;
    this.btnAddToCart = btnAddToCart;
    this.ivProduct = ivProduct;
    this.ratingBar = ratingBar;
    this.tvName = tvName;
    this.tvOriginalPrice = tvOriginalPrice;
    this.tvPrice = tvPrice;
    this.tvRatingCount = tvRatingCount;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemProductBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemProductBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_product, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemProductBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnAddToCart;
      Button btnAddToCart = ViewBindings.findChildViewById(rootView, id);
      if (btnAddToCart == null) {
        break missingId;
      }

      id = R.id.ivProduct;
      ImageView ivProduct = ViewBindings.findChildViewById(rootView, id);
      if (ivProduct == null) {
        break missingId;
      }

      id = R.id.ratingBar;
      RatingBar ratingBar = ViewBindings.findChildViewById(rootView, id);
      if (ratingBar == null) {
        break missingId;
      }

      id = R.id.tvName;
      TextView tvName = ViewBindings.findChildViewById(rootView, id);
      if (tvName == null) {
        break missingId;
      }

      id = R.id.tvOriginalPrice;
      TextView tvOriginalPrice = ViewBindings.findChildViewById(rootView, id);
      if (tvOriginalPrice == null) {
        break missingId;
      }

      id = R.id.tvPrice;
      TextView tvPrice = ViewBindings.findChildViewById(rootView, id);
      if (tvPrice == null) {
        break missingId;
      }

      id = R.id.tvRatingCount;
      TextView tvRatingCount = ViewBindings.findChildViewById(rootView, id);
      if (tvRatingCount == null) {
        break missingId;
      }

      return new ItemProductBinding((CardView) rootView, btnAddToCart, ivProduct, ratingBar, tvName,
          tvOriginalPrice, tvPrice, tvRatingCount);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
