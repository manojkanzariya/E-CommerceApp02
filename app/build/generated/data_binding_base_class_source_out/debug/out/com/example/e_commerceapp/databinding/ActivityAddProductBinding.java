// Generated by view binder compiler. Do not edit!
package com.example.e_commerceapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.ScrollView;
import android.widget.Switch;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.e_commerceapp.R;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAddProductBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final Button btnAddProduct;

  @NonNull
  public final Button btnSelectImage;

  @NonNull
  public final ImageView ivProductImage;

  @NonNull
  public final Switch switchInStock;

  @NonNull
  public final TextInputLayout tilCategory;

  @NonNull
  public final TextInputLayout tilFullDesc;

  @NonNull
  public final TextInputLayout tilName;

  @NonNull
  public final TextInputLayout tilOriginalPrice;

  @NonNull
  public final TextInputLayout tilPrice;

  @NonNull
  public final TextInputLayout tilShortDesc;

  @NonNull
  public final TextInputLayout tilStock;

  @NonNull
  public final MaterialToolbar toolbar;

  private ActivityAddProductBinding(@NonNull ScrollView rootView, @NonNull Button btnAddProduct,
      @NonNull Button btnSelectImage, @NonNull ImageView ivProductImage,
      @NonNull Switch switchInStock, @NonNull TextInputLayout tilCategory,
      @NonNull TextInputLayout tilFullDesc, @NonNull TextInputLayout tilName,
      @NonNull TextInputLayout tilOriginalPrice, @NonNull TextInputLayout tilPrice,
      @NonNull TextInputLayout tilShortDesc, @NonNull TextInputLayout tilStock,
      @NonNull MaterialToolbar toolbar) {
    this.rootView = rootView;
    this.btnAddProduct = btnAddProduct;
    this.btnSelectImage = btnSelectImage;
    this.ivProductImage = ivProductImage;
    this.switchInStock = switchInStock;
    this.tilCategory = tilCategory;
    this.tilFullDesc = tilFullDesc;
    this.tilName = tilName;
    this.tilOriginalPrice = tilOriginalPrice;
    this.tilPrice = tilPrice;
    this.tilShortDesc = tilShortDesc;
    this.tilStock = tilStock;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAddProductBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAddProductBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_add_product, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAddProductBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnAddProduct;
      Button btnAddProduct = ViewBindings.findChildViewById(rootView, id);
      if (btnAddProduct == null) {
        break missingId;
      }

      id = R.id.btnSelectImage;
      Button btnSelectImage = ViewBindings.findChildViewById(rootView, id);
      if (btnSelectImage == null) {
        break missingId;
      }

      id = R.id.ivProductImage;
      ImageView ivProductImage = ViewBindings.findChildViewById(rootView, id);
      if (ivProductImage == null) {
        break missingId;
      }

      id = R.id.switchInStock;
      Switch switchInStock = ViewBindings.findChildViewById(rootView, id);
      if (switchInStock == null) {
        break missingId;
      }

      id = R.id.tilCategory;
      TextInputLayout tilCategory = ViewBindings.findChildViewById(rootView, id);
      if (tilCategory == null) {
        break missingId;
      }

      id = R.id.tilFullDesc;
      TextInputLayout tilFullDesc = ViewBindings.findChildViewById(rootView, id);
      if (tilFullDesc == null) {
        break missingId;
      }

      id = R.id.tilName;
      TextInputLayout tilName = ViewBindings.findChildViewById(rootView, id);
      if (tilName == null) {
        break missingId;
      }

      id = R.id.tilOriginalPrice;
      TextInputLayout tilOriginalPrice = ViewBindings.findChildViewById(rootView, id);
      if (tilOriginalPrice == null) {
        break missingId;
      }

      id = R.id.tilPrice;
      TextInputLayout tilPrice = ViewBindings.findChildViewById(rootView, id);
      if (tilPrice == null) {
        break missingId;
      }

      id = R.id.tilShortDesc;
      TextInputLayout tilShortDesc = ViewBindings.findChildViewById(rootView, id);
      if (tilShortDesc == null) {
        break missingId;
      }

      id = R.id.tilStock;
      TextInputLayout tilStock = ViewBindings.findChildViewById(rootView, id);
      if (tilStock == null) {
        break missingId;
      }

      id = R.id.toolbar;
      MaterialToolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivityAddProductBinding((ScrollView) rootView, btnAddProduct, btnSelectImage,
          ivProductImage, switchInStock, tilCategory, tilFullDesc, tilName, tilOriginalPrice,
          tilPrice, tilShortDesc, tilStock, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
