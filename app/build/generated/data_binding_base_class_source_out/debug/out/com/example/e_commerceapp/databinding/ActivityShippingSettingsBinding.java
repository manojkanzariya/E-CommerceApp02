// Generated by view binder compiler. Do not edit!
package com.example.e_commerceapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.e_commerceapp.R;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.switchmaterial.SwitchMaterial;
import com.google.android.material.textfield.TextInputEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityShippingSettingsBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnSave;

  @NonNull
  public final TextInputEditText etFlatRate;

  @NonNull
  public final TextInputEditText etFreeShippingThreshold;

  @NonNull
  public final SwitchMaterial switchDelivery;

  @NonNull
  public final SwitchMaterial switchPickup;

  @NonNull
  public final MaterialToolbar toolbar;

  private ActivityShippingSettingsBinding(@NonNull LinearLayout rootView, @NonNull Button btnSave,
      @NonNull TextInputEditText etFlatRate, @NonNull TextInputEditText etFreeShippingThreshold,
      @NonNull SwitchMaterial switchDelivery, @NonNull SwitchMaterial switchPickup,
      @NonNull MaterialToolbar toolbar) {
    this.rootView = rootView;
    this.btnSave = btnSave;
    this.etFlatRate = etFlatRate;
    this.etFreeShippingThreshold = etFreeShippingThreshold;
    this.switchDelivery = switchDelivery;
    this.switchPickup = switchPickup;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityShippingSettingsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityShippingSettingsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_shipping_settings, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityShippingSettingsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnSave;
      Button btnSave = ViewBindings.findChildViewById(rootView, id);
      if (btnSave == null) {
        break missingId;
      }

      id = R.id.etFlatRate;
      TextInputEditText etFlatRate = ViewBindings.findChildViewById(rootView, id);
      if (etFlatRate == null) {
        break missingId;
      }

      id = R.id.etFreeShippingThreshold;
      TextInputEditText etFreeShippingThreshold = ViewBindings.findChildViewById(rootView, id);
      if (etFreeShippingThreshold == null) {
        break missingId;
      }

      id = R.id.switchDelivery;
      SwitchMaterial switchDelivery = ViewBindings.findChildViewById(rootView, id);
      if (switchDelivery == null) {
        break missingId;
      }

      id = R.id.switchPickup;
      SwitchMaterial switchPickup = ViewBindings.findChildViewById(rootView, id);
      if (switchPickup == null) {
        break missingId;
      }

      id = R.id.toolbar;
      MaterialToolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivityShippingSettingsBinding((LinearLayout) rootView, btnSave, etFlatRate,
          etFreeShippingThreshold, switchDelivery, switchPickup, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
