// Generated by view binder compiler. Do not edit!
package com.example.e_commerceapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.e_commerceapp.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.chip.Chip;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemOrderHistoryBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final MaterialButton btnViewDetails;

  @NonNull
  public final Chip chipStatus;

  @NonNull
  public final TextView tvItemCount;

  @NonNull
  public final TextView tvOrderDate;

  @NonNull
  public final TextView tvOrderId;

  @NonNull
  public final TextView tvOrderTotal;

  private ItemOrderHistoryBinding(@NonNull MaterialCardView rootView,
      @NonNull MaterialButton btnViewDetails, @NonNull Chip chipStatus,
      @NonNull TextView tvItemCount, @NonNull TextView tvOrderDate, @NonNull TextView tvOrderId,
      @NonNull TextView tvOrderTotal) {
    this.rootView = rootView;
    this.btnViewDetails = btnViewDetails;
    this.chipStatus = chipStatus;
    this.tvItemCount = tvItemCount;
    this.tvOrderDate = tvOrderDate;
    this.tvOrderId = tvOrderId;
    this.tvOrderTotal = tvOrderTotal;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemOrderHistoryBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemOrderHistoryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_order_history, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemOrderHistoryBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnViewDetails;
      MaterialButton btnViewDetails = ViewBindings.findChildViewById(rootView, id);
      if (btnViewDetails == null) {
        break missingId;
      }

      id = R.id.chipStatus;
      Chip chipStatus = ViewBindings.findChildViewById(rootView, id);
      if (chipStatus == null) {
        break missingId;
      }

      id = R.id.tvItemCount;
      TextView tvItemCount = ViewBindings.findChildViewById(rootView, id);
      if (tvItemCount == null) {
        break missingId;
      }

      id = R.id.tvOrderDate;
      TextView tvOrderDate = ViewBindings.findChildViewById(rootView, id);
      if (tvOrderDate == null) {
        break missingId;
      }

      id = R.id.tvOrderId;
      TextView tvOrderId = ViewBindings.findChildViewById(rootView, id);
      if (tvOrderId == null) {
        break missingId;
      }

      id = R.id.tvOrderTotal;
      TextView tvOrderTotal = ViewBindings.findChildViewById(rootView, id);
      if (tvOrderTotal == null) {
        break missingId;
      }

      return new ItemOrderHistoryBinding((MaterialCardView) rootView, btnViewDetails, chipStatus,
          tvItemCount, tvOrderDate, tvOrderId, tvOrderTotal);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
